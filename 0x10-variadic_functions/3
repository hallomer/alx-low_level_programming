#include "variadic_functions.h"
#include <stdio.h>
#include <stdarg.h>

/**
 * print_all - Prints anything
 * @format: A list of types of arguments
 *
 * Return: void
*/
void print_all(const char * const format, ...)
{
	int i = 0, d;
	char c;
	double f;
	char *s;
	va_list args;

	va_start(args, format);
	while (format && format[i])
	{
		switch (format[i])
		{
			case 'c':
				{
					c = va_arg(args, int);
					printf("%c", c);
					break;
				}
			case 'i':
				{
					d = va_arg(args, int);
					printf("%d", d);
					break;
				}
			case 'f':
				{
					f = va_arg(args, double);
					printf("%f", f);
					break;
				}
			case 's':
				{
					s = va_arg(args, char *);
					if (s == NULL)
					{
						printf("(nil)");
						break;
					}
					printf("%s", s);
					break;
				}
			default:
				i++;
				continue;
		}
		if (format[i + 1] != '\0')
			printf(", ");
		i++;
	}
	printf("\n");
	va_end(args);
}
